<div class="tab-pane fade <% if(typeof(pane) !== 'undefined' && pane == 'role-list') { %>show active<% } %>"
    id="role-list-pane" role="tabpanel" aria-labelledby="role-list-tab">
    <h2 class="pane-h2">Role List</h2>
    <div class="card-filter-section space-between">
        <div class="form-group form-inline mb-3 card-filter-selector">
            <label id="role-select-label" class="form-label" for="role-select">Show: </label>
            <select id="role-select" class="form-control" type="text" onchange="toggleRoleView()" name="roles"
                aria-label="role-select-label" aria-describedby="role-select-basic-addon">
                <option value="active" selected>Open</option>
                <option value="inactive">Closed</option>
            </select>
        </div>
    </div>
    <section id="role-list-section" class="content-pane-scroll-cards-section tab-scroll-pane">
    </section>
    <nav id="role-list-section-pagination" class="content-nav-right" aria-label="Role listing">
    </nav>
</div>
<script>
function getRoleDetails(obj){
    console.log('Calling getRoleDetails....')
    var xhttp;
    xhttp=new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        //cFunction(this);
        //console.log(document.getElementById('warehouse-list-pane'))
        //console.log(typeof this.responseText);
        updateRoleView(JSON.parse(this.responseText))
        //console.log(this.responseText);
      }
    };
    //url = 'http://localhost:3005/api/get/shops?sid=12&uid=5f24af48d559ff4b42e0dc4d'
    url = location.protocol + '//' + location.hostname + ':' + location.port + '/api/get/roles?'+new URLSearchParams(obj).toString();
    console.log(url)
    xhttp.open("GET", url, true);
    xhttp.send();

    console.log('Ending getRoleDetails....')
}

 function respondToRoleVisibility(element, callback) {
  var options = {
    root: document.documentElement
  }
  var observer = new IntersectionObserver((entries, observer) => {
    entries.forEach(entry => {
      if (entry.intersectionRatio > 0) callback();
    });
  }, options);

  observer.observe(element);
}

respondToRoleVisibility(document.getElementById("role-list-pane"), visible => {
	//console.log("Initial Call of Storefront Details!")
  //console.log('<%= user.id %>')
  let e = document.getElementById("role-select")
  getRoleDetails({sid: '12', uid: '<%= user.id %>',status: e.options[e.selectedIndex].value})
});

function updateRoleView(r){
  //console.log(typeof s)
  document.getElementById("role-list-section").innerHTML = ""
  if (r.roles.length > 0){
    for (rr in r.roles){
      let card = document.createElement("DIV")
      card.className = "card"
      let card_body = document.createElement("DIV")
      card_body.className = "card-body"
      let actionable_card_pane = document.createElement("DIV")
      actionable_card_pane.className = "actionable-card-pane"
      let address_view_card_pane = document.createElement("DIV")
      address_view_card_pane.className = "address-view-card-pane"
      let ul = document.createElement("UL")
      let li = document.createElement("LI")
      let span = document.createElement("SPAN")
      let p = document.createElement("P")
      p.className = "item-card-label"
      let b = document.createElement("B")
      b.innerHTML = r.roles[rr].displayName ? r.roles[rr].displayName : r.roles[rr].name
      p.appendChild(b)
      span.appendChild(p)
      let item_card = document.createElement("DIV")
      item_card.className = "item-card"
      let item_card_left = document.createElement("DIV")
      item_card_left.className = "item-card-left"
      //console.log(typeof r.roles[rr].images)
      /*
      if (typeof (r.roles[rr].images) !== 'undefined' && Array.isArray(r.roles[rr].images) && r.roles[rr].images.length > 0) {
        for (i in r.roles[rr].images){
          let role_image = document.createElement("IMG")
          warehouse_image.className = "role-image"
          warehouse_image.alt = r.roles[rr].images[i].originalname
          warehouse_image.src = r.roles[rr].images[i].src
          console.log(r.roles[rr].images[i].src)
          console.log(r.roles[rr].images[i])
          item_card_left.appendChild(role_image)
        }
      } else {
        let figure = document.createElement("FIGURE")
        figure.className = "role-image"
        figure.innerHTML = `<%- include("../assets/symbols/shop.svg") %>`
        item_card_left.appendChild(figure)
      }
      */
      item_card.appendChild(item_card_left)
      let item_card_right_extra_info = document.createElement("DIV")
      item_card_right_extra_info.className = "item-card-right extra-info"
      if (typeof (r.roles[rr].status) !== 'undefined') {
        let h4 = document.createElement("H4")
        h4.innerHTML = "Status"
        item_card_right_extra_info.appendChild(h4)
        let p_status = document.createElement("P")
        if (r.roles[rr].status == 'active') {
          p_status.innerHTML = 'Open'
        } else {
          p_status.innerHTML = 'Closed'
        }
        item_card_right_extra_info.appendChild(p_status)
      }
      if (typeof (r.roles[rr].description) !== 'undefined') {
        let h4 = document.createElement("H4")
        h4.innerHTML = "Description"
        item_card_right_extra_info.appendChild(h4)
        let p_desc = document.createElement("P")
        p_desc.innerHTML = r.roles[rr].description
        item_card_right_extra_info.appendChild(p_desc)
      }
      item_card.appendChild(item_card_right_extra_info)
      span.appendChild(item_card)
      li.appendChild(span)
      ul.appendChild(li)
      address_view_card_pane.appendChild(ul)
      actionable_card_pane.appendChild(address_view_card_pane)
      let action_button_section = document.createElement("DIV")
      action_button_section.className = "action-button-section"
      let edit_delete_action_form = document.createElement("FORM")
      edit_delete_action_form.className = "edit-delete-action-form"
      edit_delete_action_form.method = "POST"
      edit_delete_action_form.action = "/admin<% if(typeof(csrfToken) !== 'undefined') { %>?_csrf=<%=csrfToken%><% } %>"
      let input_id = document.createElement("INPUT")
      input_id.type = "hidden"
      input_id.name = "id"
      input_id.value = "up-role"
      edit_delete_action_form.appendChild(input_id)
      let input_sid = document.createElement("INPUT")
      input_sid.type = "hidden"
      input_sid.name = "rid"
      if (typeof(r.roles[rr]._id)  !== 'undefined') input_sid.value = r.roles[rr]._id
      edit_delete_action_form.appendChild(input_sid)
      let input_uid = document.createElement("INPUT")
      input_uid.type = "hidden"
      input_uid.name = "uid"
      if (typeof(r.roles[rr].owner)  !== 'undefined') input_uid.value = r.roles[rr].owner
      edit_delete_action_form.appendChild(input_uid)
      if (r.roles[rr].status == 'inactive') {
        let a = document.createElement("A")
        a.href = "/admin/edit?w="+r.roles[rr]._id
        let button_edit = document.createElement("BUTTON")
        button_edit.className = "action-icon-button  action-icon"
        button_edit.type="button"
        button_edit.title="Edit"
        button_edit.name="update"
        button_edit.value="edit"
        //button_edit.
        button_edit.innerHTML = `<%- include("../assets/symbols/edit.svg") %>`
        a.appendChild(button_edit)
        edit_delete_action_form.appendChild(a)
        let button_re_activate = document.createElement("BUTTON")
        button_re_activate.className = "action-icon-button reactivate-icon action-icon"
        button_re_activate.type="submit"
        button_re_activate.title="Re-activate"
        button_re_activate.name="update"
        button_re_activate.value="open"
        //button_re_activate.
        button_re_activate.innerHTML = `<%- include("../assets/symbols/reload.svg") %>`
        edit_delete_action_form.appendChild(button_re_activate)
        let button_delete = document.createElement("BUTTON")
        button_delete.className = "action-icon-button delete-icon action-icon close-icon"
        button_delete.type="submit"
        button_delete.title="Delete"
        button_delete.name="update"
        button_delete.value="delete"
        //button_delete.
        button_delete.innerHTML = `<%- include("../assets/symbols/bin.svg") %>`
        edit_delete_action_form.appendChild(button_delete)
      } else {
        let a = document.createElement("A")
        a.href = "/admin/edit?w="+r.roles[rr]._id
        let button_edit = document.createElement("BUTTON")
        button_edit.className = "action-icon-button  action-icon"
        button_edit.type="button"
        button_edit.title="Edit"
        button_edit.name="update"
        button_edit.value="edit"
        //button_edit.
        button_edit.innerHTML = `<%- include("../assets/symbols/edit.svg") %>`
        a.appendChild(button_edit)
        edit_delete_action_form.appendChild(a)
        let button_close = document.createElement("BUTTON")
        button_close.className = "action-icon-button delete-icon action-icon close-icon"
        button_close.type="submit"
        button_close.title="Close"
        button_close.name="update"
        button_close.value="close"
        //button_close.
        button_close.innerHTML = `<%- include("../assets/symbols/no.svg") %>`
        edit_delete_action_form.appendChild(button_close)
      }
      action_button_section.appendChild(edit_delete_action_form)
      actionable_card_pane.appendChild(action_button_section)
      card_body.appendChild(actionable_card_pane)
      card.appendChild(card_body)
      document.getElementById("role-list-section").appendChild(card)
    }
  } else {
    let p = document.createElement("P")
    p.innerHTML = "No roles associated with account."
    document.getElementById("role-list-section").appendChild(p)
  }
  //document.getElementById().innerHTML =
  document.getElementById("role-list-section-pagination").innerHTML = ""
  if (typeof(r.total_pages) !== 'undefined' && r.total_pages > 0) {
    let pagination_text_center = document.createElement("UL")
    pagination_text_center.className = "pagination text-center"
    if (typeof(r.current_page) !== 'undefined' ) {
      if (r.current_page == 1) {
        let page_item_disabled = document.createElement("LI")
        page_item_disabled.className = "page-item disabled"
        let a = document.createElement("A")
        a.className = "page-link"
        a.innerHTML = "First"
        page_item_disabled.appendChild(a)
        pagination_text_center.appendChild(page_item_disabled)
      } else {
        let page_item = document.createElement("LI")
        page_item.className = "page-item"
        let a = document.createElement("A")
        a.className = "page-link"
        //a.href = "/user/shop/page/1"
        a.onclick = function () {
          let e = document.getElementById("role-select")
          getRoleDetails({sid: '12', uid: '<%= user.id %>',page: 1,status: e.options[e.selectedIndex].value})
        }
        a.innerHTML = "First"
        page_item.appendChild(a)
        pagination_text_center.appendChild(page_item)
      }
      let i = (Number(r.current_page) > 5 ? Number(r.current_page) - 4 : 1)
      if (i !== 1) {
        let page_item_disabled = document.createElement("LI")
        page_item_disabled.className = "page-item disabled"
        let a = document.createElement("A")
        a.className = "page-link"
        a.innerHTML = "..."
        page_item_disabled.appendChild(a)
        pagination_text_center.appendChild(page_item_disabled)
      }
      for (; i <= (Number(r.current_page) + 4) && i <= r.total_pages; i++) {
        let j = i
        if (i == r.current_page) {
          let page_item_active = document.createElement("LI")
          page_item_active.className = "page-item active"
          let a = document.createElement("A")
          a.className = "page-link"
          a.innerHTML = i
          page_item_active.appendChild(a)
          pagination_text_center.appendChild(page_item_active)
        } else {
          let page_item = document.createElement("LI")
          page_item.className = "page-item"
          let a = document.createElement("A")
          a.className = "page-link"
          //a.href = "/user/shop/page/"+i
          a.onclick = function () {
            console.log({sid: '12', uid: '<%= user.id %>',page: j})
            let e = document.getElementById("role-select")
            console.log(e.options[e.selectedIndex].value)
            getRoleDetails({sid: '12', uid: '<%= user.id %>',page: j, status: e.options[e.selectedIndex].value})
          }
          a.innerHTML = i
          page_item.appendChild(a)
          pagination_text_center.appendChild(page_item)
        }
        if (i == Number(r.current_page) + 4 && i < r.total_pages) {
          let page_item_disabled = document.createElement("LI")
          page_item_disabled.className = "page-item disabled"
          let a = document.createElement("A")
          a.className = "page-link"
          a.innerHTML = "..."
          page_item_disabled.appendChild(a)
          pagination_text_center.appendChild(page_item_disabled)
        }
      }
      if (r.current_page == r.total_pages) {
        let page_item_disabled = document.createElement("LI")
        page_item_disabled.className = "page-item disabled"
        let a = document.createElement("A")
        a.className = "page-link"
        a.innerHTML = "Last"
        page_item_disabled.appendChild(a)
        pagination_text_center.appendChild(page_item_disabled)
      } else {
        let page_item = document.createElement("LI")
        page_item.className = "page-item"
        let a = document.createElement("A")
        a.className = "page-link"
        //a.href = "/user/shop/page/"+s.total_pages
        a.onclick = function () {
          let e = document.getElementById("role-select")
          getRoleDetails({sid: '12', uid: '<%= user.id %>',page: s.total_pages, status: e.options[e.selectedIndex].value})
        }
        a.innerHTML = "Last"
        page_item.appendChild(a)
        pagination_text_center.appendChild(page_item)
      }
    }
    document.getElementById("role-list-section-pagination").appendChild(pagination_text_center)
  }
}

function toggleRoleView(){
    let e = document.getElementById("role-select")
    getRoleDetails({sid: '12', uid: '<%= user.id %>', status: e.options[e.selectedIndex].value})
}

function toggleAddressFields(){
    let useAddr = document.getElementById('use-addr-checkbox')
    let addrFieldSet = document.getElementById('new-role-address-fieldset')
    if(useAddr && useAddr.checked) {
        if(addrFieldSet) {
            addrFieldSet.setAttribute('disabled', 'disabled')
        }
    } else {
        if (addrFieldSet) {
            addrFieldSet.removeAttribute('disabled')
        }
    }
}

function closeNewRoleForm(){
    document.getElementById('newrole').setAttribute('hidden', true)
    document.getElementById('new-role-link').scrollIntoView(false)
}
</script>
